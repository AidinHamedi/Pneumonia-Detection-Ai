def generate_data(directory, generator_options, augmentation_options, img_res, repeats, num_classes=2):
    datagen = ImageDataGenerator(rescale=1./255, **generator_options)
    generator = datagen.flow_from_directory(
        directory,
        target_size=(img_res[0], img_res[1]),
        batch_size=sum([len(files) for r, d, files in os.walk(directory)]),
        class_mode='categorical' if num_classes > 2 else 'binary',
        color_mode='rgb'
    )
    x_data, y_data = next(iter(generator))
    y_data = to_categorical(y_data, num_classes=num_classes)

    if augmentation_options is not None:
        for _ in range(repeats):
            augmented_datagen = ImageDataGenerator(rescale=1./255, **augmentation_options)
            augmented_generator = augmented_datagen.flow_from_directory(
                directory,
                target_size=(img_res[0], img_res[1]),
                batch_size=sum([len(files) for r, d, files in os.walk(directory)]),
                class_mode='categorical' if num_classes > 2 else 'binary',
                color_mode='rgb'
            )
            x_augmented, y_augmented = augmented_generator.next()
            y_augmented = to_categorical(y_augmented, num_classes=num_classes)
            x_data = np.concatenate([x_data, x_augmented])
            y_data = np.concatenate([y_data, y_augmented])
            
    return x_data, y_data

train_options = {"horizontal_flip": False,
                 "zoom_range": 0.2,
                 "width_shift_range": 0.2, 
                 "brightness_range": (0.95, 1.05),
                 "height_shift_range": 0.2}

val_generator_options = {"horizontal_flip": False, 
                         "zoom_range": 0.1, 
                         "width_shift_range": 0.1, 
                         "brightness_range": (0.95, 1.05), 
                         "height_shift_range": 0.1}

test_generator_options = {"horizontal_flip": False, 
                          "zoom_range": 0.1, 
                          "width_shift_range": 0.1,
                          "brightness_range": (0.95, 1.05), 
                          "height_shift_range": 0.1}

augmentation_options = {"horizontal_flip": True,
                        "rotation_range": 180,
                        "zoom_range": 0.4, 
                        "width_shift_range": 0.4, 
                        "brightness_range": (0.3, 1.7),
                        "height_shift_range": 0.4}

x_val, y_val = generate_data(validation_dir, val_generator_options, None, img_res, 0)

x_test, y_test = generate_data(test_dir, test_generator_options, None, img_res, 0)

x_train, y_train = generate_data(train_dir, train_options, augmentation_options, img_res, 2)
