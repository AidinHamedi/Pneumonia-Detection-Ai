from keras.models import Model
from keras.layers import Dense, Flatten
from keras.regularizers import l2
from keras.applications.vgg16 import VGG16

# Make sure to add the input_shape parameter in the VGG16 call.
vgg = VGG16(include_top=False, input_shape=[img_res[0], img_res[1], img_res[2]])

# retrieve output from last layer in the vgg model
flat1 = Flatten()(vgg.outputs[0])
fc1 = Dense(2024, activation='relu', name='fc1', kernel_regularizer=l2(0.1))(flat1)
norm1 = BatchNormalization()(fc1)
fc2 = Dense(1024, activation='relu', name='fc2', kernel_regularizer=l2(0.1))(norm1)
norm2 = BatchNormalization()(fc2)
class1 = Dense(2, activation='softmax', name='predictions')(norm2)

# define new model
model = Model(inputs=vgg.inputs, outputs=class1)

# compile model
opt = SGD(learning_rate=0.01, momentum=0.9)
model.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy', 'binary_accuracy'])
model.predict()
model.summary()